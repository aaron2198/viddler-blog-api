// Code generated by ent, DO NOT EDIT.

package article

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"gitlab.aaronhess.xyz/viddler/viddler-blog-api/internal/db/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldID, id))
}

// VideoURL applies equality check predicate on the "video_url" field. It's identical to VideoURLEQ.
func VideoURL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldVideoURL, v))
}

// VideoID applies equality check predicate on the "video_id" field. It's identical to VideoIDEQ.
func VideoID(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldVideoID, v))
}

// Uploader applies equality check predicate on the "uploader" field. It's identical to UploaderEQ.
func Uploader(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldUploader, v))
}

// UploaderURL applies equality check predicate on the "uploader_url" field. It's identical to UploaderURLEQ.
func UploaderURL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldUploaderURL, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldDescription, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitle, v))
}

// Thumbnail applies equality check predicate on the "thumbnail" field. It's identical to ThumbnailEQ.
func Thumbnail(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldThumbnail, v))
}

// HTML applies equality check predicate on the "html" field. It's identical to HTMLEQ.
func HTML(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldHTML, v))
}

// VideoURLEQ applies the EQ predicate on the "video_url" field.
func VideoURLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldVideoURL, v))
}

// VideoURLNEQ applies the NEQ predicate on the "video_url" field.
func VideoURLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldVideoURL, v))
}

// VideoURLIn applies the In predicate on the "video_url" field.
func VideoURLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldVideoURL, vs...))
}

// VideoURLNotIn applies the NotIn predicate on the "video_url" field.
func VideoURLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldVideoURL, vs...))
}

// VideoURLGT applies the GT predicate on the "video_url" field.
func VideoURLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldVideoURL, v))
}

// VideoURLGTE applies the GTE predicate on the "video_url" field.
func VideoURLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldVideoURL, v))
}

// VideoURLLT applies the LT predicate on the "video_url" field.
func VideoURLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldVideoURL, v))
}

// VideoURLLTE applies the LTE predicate on the "video_url" field.
func VideoURLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldVideoURL, v))
}

// VideoURLContains applies the Contains predicate on the "video_url" field.
func VideoURLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldVideoURL, v))
}

// VideoURLHasPrefix applies the HasPrefix predicate on the "video_url" field.
func VideoURLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldVideoURL, v))
}

// VideoURLHasSuffix applies the HasSuffix predicate on the "video_url" field.
func VideoURLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldVideoURL, v))
}

// VideoURLEqualFold applies the EqualFold predicate on the "video_url" field.
func VideoURLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldVideoURL, v))
}

// VideoURLContainsFold applies the ContainsFold predicate on the "video_url" field.
func VideoURLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldVideoURL, v))
}

// VideoIDEQ applies the EQ predicate on the "video_id" field.
func VideoIDEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldVideoID, v))
}

// VideoIDNEQ applies the NEQ predicate on the "video_id" field.
func VideoIDNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldVideoID, v))
}

// VideoIDIn applies the In predicate on the "video_id" field.
func VideoIDIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldVideoID, vs...))
}

// VideoIDNotIn applies the NotIn predicate on the "video_id" field.
func VideoIDNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldVideoID, vs...))
}

// VideoIDGT applies the GT predicate on the "video_id" field.
func VideoIDGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldVideoID, v))
}

// VideoIDGTE applies the GTE predicate on the "video_id" field.
func VideoIDGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldVideoID, v))
}

// VideoIDLT applies the LT predicate on the "video_id" field.
func VideoIDLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldVideoID, v))
}

// VideoIDLTE applies the LTE predicate on the "video_id" field.
func VideoIDLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldVideoID, v))
}

// VideoIDContains applies the Contains predicate on the "video_id" field.
func VideoIDContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldVideoID, v))
}

// VideoIDHasPrefix applies the HasPrefix predicate on the "video_id" field.
func VideoIDHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldVideoID, v))
}

// VideoIDHasSuffix applies the HasSuffix predicate on the "video_id" field.
func VideoIDHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldVideoID, v))
}

// VideoIDEqualFold applies the EqualFold predicate on the "video_id" field.
func VideoIDEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldVideoID, v))
}

// VideoIDContainsFold applies the ContainsFold predicate on the "video_id" field.
func VideoIDContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldVideoID, v))
}

// UploaderEQ applies the EQ predicate on the "uploader" field.
func UploaderEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldUploader, v))
}

// UploaderNEQ applies the NEQ predicate on the "uploader" field.
func UploaderNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldUploader, v))
}

// UploaderIn applies the In predicate on the "uploader" field.
func UploaderIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldUploader, vs...))
}

// UploaderNotIn applies the NotIn predicate on the "uploader" field.
func UploaderNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldUploader, vs...))
}

// UploaderGT applies the GT predicate on the "uploader" field.
func UploaderGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldUploader, v))
}

// UploaderGTE applies the GTE predicate on the "uploader" field.
func UploaderGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldUploader, v))
}

// UploaderLT applies the LT predicate on the "uploader" field.
func UploaderLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldUploader, v))
}

// UploaderLTE applies the LTE predicate on the "uploader" field.
func UploaderLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldUploader, v))
}

// UploaderContains applies the Contains predicate on the "uploader" field.
func UploaderContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldUploader, v))
}

// UploaderHasPrefix applies the HasPrefix predicate on the "uploader" field.
func UploaderHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldUploader, v))
}

// UploaderHasSuffix applies the HasSuffix predicate on the "uploader" field.
func UploaderHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldUploader, v))
}

// UploaderEqualFold applies the EqualFold predicate on the "uploader" field.
func UploaderEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldUploader, v))
}

// UploaderContainsFold applies the ContainsFold predicate on the "uploader" field.
func UploaderContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldUploader, v))
}

// UploaderURLEQ applies the EQ predicate on the "uploader_url" field.
func UploaderURLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldUploaderURL, v))
}

// UploaderURLNEQ applies the NEQ predicate on the "uploader_url" field.
func UploaderURLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldUploaderURL, v))
}

// UploaderURLIn applies the In predicate on the "uploader_url" field.
func UploaderURLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldUploaderURL, vs...))
}

// UploaderURLNotIn applies the NotIn predicate on the "uploader_url" field.
func UploaderURLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldUploaderURL, vs...))
}

// UploaderURLGT applies the GT predicate on the "uploader_url" field.
func UploaderURLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldUploaderURL, v))
}

// UploaderURLGTE applies the GTE predicate on the "uploader_url" field.
func UploaderURLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldUploaderURL, v))
}

// UploaderURLLT applies the LT predicate on the "uploader_url" field.
func UploaderURLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldUploaderURL, v))
}

// UploaderURLLTE applies the LTE predicate on the "uploader_url" field.
func UploaderURLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldUploaderURL, v))
}

// UploaderURLContains applies the Contains predicate on the "uploader_url" field.
func UploaderURLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldUploaderURL, v))
}

// UploaderURLHasPrefix applies the HasPrefix predicate on the "uploader_url" field.
func UploaderURLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldUploaderURL, v))
}

// UploaderURLHasSuffix applies the HasSuffix predicate on the "uploader_url" field.
func UploaderURLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldUploaderURL, v))
}

// UploaderURLEqualFold applies the EqualFold predicate on the "uploader_url" field.
func UploaderURLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldUploaderURL, v))
}

// UploaderURLContainsFold applies the ContainsFold predicate on the "uploader_url" field.
func UploaderURLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldUploaderURL, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldDescription, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTitle, v))
}

// ThumbnailEQ applies the EQ predicate on the "thumbnail" field.
func ThumbnailEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldThumbnail, v))
}

// ThumbnailNEQ applies the NEQ predicate on the "thumbnail" field.
func ThumbnailNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldThumbnail, v))
}

// ThumbnailIn applies the In predicate on the "thumbnail" field.
func ThumbnailIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldThumbnail, vs...))
}

// ThumbnailNotIn applies the NotIn predicate on the "thumbnail" field.
func ThumbnailNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldThumbnail, vs...))
}

// ThumbnailGT applies the GT predicate on the "thumbnail" field.
func ThumbnailGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldThumbnail, v))
}

// ThumbnailGTE applies the GTE predicate on the "thumbnail" field.
func ThumbnailGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldThumbnail, v))
}

// ThumbnailLT applies the LT predicate on the "thumbnail" field.
func ThumbnailLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldThumbnail, v))
}

// ThumbnailLTE applies the LTE predicate on the "thumbnail" field.
func ThumbnailLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldThumbnail, v))
}

// ThumbnailContains applies the Contains predicate on the "thumbnail" field.
func ThumbnailContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldThumbnail, v))
}

// ThumbnailHasPrefix applies the HasPrefix predicate on the "thumbnail" field.
func ThumbnailHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldThumbnail, v))
}

// ThumbnailHasSuffix applies the HasSuffix predicate on the "thumbnail" field.
func ThumbnailHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldThumbnail, v))
}

// ThumbnailEqualFold applies the EqualFold predicate on the "thumbnail" field.
func ThumbnailEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldThumbnail, v))
}

// ThumbnailContainsFold applies the ContainsFold predicate on the "thumbnail" field.
func ThumbnailContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldThumbnail, v))
}

// HTMLEQ applies the EQ predicate on the "html" field.
func HTMLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldHTML, v))
}

// HTMLNEQ applies the NEQ predicate on the "html" field.
func HTMLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldHTML, v))
}

// HTMLIn applies the In predicate on the "html" field.
func HTMLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldHTML, vs...))
}

// HTMLNotIn applies the NotIn predicate on the "html" field.
func HTMLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldHTML, vs...))
}

// HTMLGT applies the GT predicate on the "html" field.
func HTMLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldHTML, v))
}

// HTMLGTE applies the GTE predicate on the "html" field.
func HTMLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldHTML, v))
}

// HTMLLT applies the LT predicate on the "html" field.
func HTMLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldHTML, v))
}

// HTMLLTE applies the LTE predicate on the "html" field.
func HTMLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldHTML, v))
}

// HTMLContains applies the Contains predicate on the "html" field.
func HTMLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldHTML, v))
}

// HTMLHasPrefix applies the HasPrefix predicate on the "html" field.
func HTMLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldHTML, v))
}

// HTMLHasSuffix applies the HasSuffix predicate on the "html" field.
func HTMLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldHTML, v))
}

// HTMLEqualFold applies the EqualFold predicate on the "html" field.
func HTMLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldHTML, v))
}

// HTMLContainsFold applies the ContainsFold predicate on the "html" field.
func HTMLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldHTML, v))
}

// HasUserOptions applies the HasEdge predicate on the "user_options" edge.
func HasUserOptions() predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, UserOptionsTable, UserOptionsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserOptionsWith applies the HasEdge predicate on the "user_options" edge with a given conditions (other predicates).
func HasUserOptionsWith(preds ...predicate.UserOptions) predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := newUserOptionsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Article) predicate.Article {
	return predicate.Article(sql.NotPredicates(p))
}
